{
  "total_tests": 477,
  "total_passed": 477,
  "total_failed": 0,
  "total_skipped": 0,
  "total_errors": 0,
  "total_duration": 11.067415952682495,
  "modules_tested": [
    "assembler",
    "base",
    "compiler",
    "config_fields",
    "deps"
  ],
  "failed_modules": [],
  "results": [
    {
      "module": "assembler",
      "passed": 41,
      "failed": 0,
      "skipped": 0,
      "errors": 0,
      "duration": 2.5793588161468506,
      "exit_code": 0,
      "output": ".........................................                                [100%]\n=============================== warnings summary ===============================\n.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323: 3 warnings\ntest/core/assembler/test_pipeline_builder_template.py: 13 warnings\n  /Users/tianpeixie/github_workspace/cursus/.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\ntest/core/assembler/test_pipeline_builder_template.py::TestPipelineTemplateBase::test_initialization\ntest/core/assembler/test_pipeline_builder_template.py::TestPipelineTemplateBase::test_initialization\n  /Users/tianpeixie/github_workspace/cursus/.venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n",
      "error_output": ""
    },
    {
      "module": "base",
      "passed": 145,
      "failed": 0,
      "skipped": 0,
      "errors": 0,
      "duration": 2.0299580097198486,
      "exit_code": 0,
      "output": "........................................................................ [ 49%]\n........................................................................ [ 99%]\n.                                                                        [100%]\n=============================== warnings summary ===============================\n.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323\n  /Users/tianpeixie/github_workspace/cursus/.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\ntest/core/base/test_contract_base.py: 237 warnings\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:236: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    if isinstance(node, ast.Str):\n\ntest/core/base/test_contract_base.py: 32 warnings\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:237: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead\n    if \"/opt/ml/processing/input\" in node.s:\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_input_paths\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_input_paths\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_caching_behavior\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_caching_behavior\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:238: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead\n    self._input_paths.add(node.s)\n\ntest/core/base/test_contract_base.py: 118 warnings\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:263: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    if isinstance(node, ast.Str):\n\ntest/core/base/test_contract_base.py: 16 warnings\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:264: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead\n    if \"/opt/ml/processing/output\" in node.s:\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_output_paths\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_output_paths\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:265: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead\n    self._output_paths.add(node.s)\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_env_var_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_caching_behavior\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:286: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    if isinstance(node.slice, ast.Str):\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_env_var_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_caching_behavior\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:287: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead\n    self._env_vars.add(node.slice.s)\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_env_var_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_caching_behavior\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:300: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    if node.args and isinstance(node.args[0], ast.Str):\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_env_var_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_caching_behavior\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:301: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead\n    self._env_vars.add(node.args[0].s)\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_env_var_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_caching_behavior\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:312: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    if node.args and isinstance(node.args[0], ast.Str):\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_env_var_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_caching_behavior\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:313: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead\n    self._env_vars.add(node.args[0].s)\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_argument_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_argument_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_argument_usage\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:332: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    if node.args and (isinstance(node.args[0], ast.Str) or\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_argument_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_argument_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_argument_usage\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:334: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead\n    arg_name = node.args[0].s if isinstance(node.args[0], ast.Str) else node.args[0].value\n\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_argument_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_argument_usage\ntest/core/base/test_contract_base.py::TestScriptAnalyzer::test_get_argument_usage\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/base/contract_base.py:334: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead\n    arg_name = node.args[0].s if isinstance(node.args[0], ast.Str) else node.args[0].value\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n",
      "error_output": ""
    },
    {
      "module": "compiler",
      "passed": 80,
      "failed": 0,
      "skipped": 0,
      "errors": 0,
      "duration": 2.1651360988616943,
      "exit_code": 0,
      "output": "........................................................................ [ 90%]\n........                                                                 [100%]\n=============================== warnings summary ===============================\n.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323: 3 warnings\ntest/core/compiler/test_dag_compiler.py: 13 warnings\n  /Users/tianpeixie/github_workspace/cursus/.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\ntest/core/compiler/test_dag_compiler.py::TestDagCompiler::test_compile_with_custom_pipeline_name\n  /Users/tianpeixie/github_workspace/cursus/.venv/lib/python3.12/site-packages/_pytest/python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but test/core/compiler/test_dag_compiler.py::TestDagCompiler::test_compile_with_custom_pipeline_name returned <class 'generator'>.\n  Did you mean to use `assert` instead of `return`?\n  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.\n    warnings.warn(\n\ntest/core/compiler/test_dag_compiler.py::TestPipelineDAGCompilerInit::test_compiler_init_missing_config_file\ntest/core/compiler/test_dag_compiler.py::TestPipelineDAGCompilerInit::test_compiler_init_missing_config_file\n  /Users/tianpeixie/github_workspace/cursus/.venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\ntest/core/compiler/test_dynamic_template.py::TestDynamicPipelineTemplate::test_init_stores_config_path\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/steps/configs/utils.py:394: DeprecationWarning: Importing from cursus.steps.registry is deprecated. Use cursus.registry instead. This compatibility shim will be removed in a future version.\n    from ..registry import STEP_NAMES, HYPERPARAMETER_REGISTRY\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n",
      "error_output": ""
    },
    {
      "module": "config_fields",
      "passed": 122,
      "failed": 0,
      "skipped": 0,
      "errors": 0,
      "duration": 2.1970510482788086,
      "exit_code": 0,
      "output": "........................................................................ [ 59%]\n..................................................                       [100%]\n=============================== warnings summary ===============================\n.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323: 16 warnings\ntest/core/config_fields/test_config_field_categorizer.py: 13 warnings\n  /Users/tianpeixie/github_workspace/cursus/.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\ntest/core/config_fields/test_circular_reference_consolidated.py:28\n  /Users/tianpeixie/github_workspace/cursus/test/core/config_fields/test_circular_reference_consolidated.py:28: PytestCollectionWarning: cannot collect test class 'TestLogHandler' because it has a __init__ constructor (from: test/core/config_fields/test_circular_reference_consolidated.py)\n    class TestLogHandler(logging.Handler):\n\ntest/core/config_fields/test_config_class_store.py:19\n  /Users/tianpeixie/github_workspace/cursus/test/core/config_fields/test_config_class_store.py:19: PytestCollectionWarning: cannot collect test class 'TestConfigA' because it has a __init__ constructor (from: test/core/config_fields/test_config_class_store.py)\n    class TestConfigA(BaseModel):\n\ntest/core/config_fields/test_config_class_store.py:24\n  /Users/tianpeixie/github_workspace/cursus/test/core/config_fields/test_config_class_store.py:24: PytestCollectionWarning: cannot collect test class 'TestConfigB' because it has a __init__ constructor (from: test/core/config_fields/test_config_class_store.py)\n    class TestConfigB(BaseModel):\n\ntest/core/config_fields/test_config_class_store.py:29\n  /Users/tianpeixie/github_workspace/cursus/test/core/config_fields/test_config_class_store.py:29: PytestCollectionWarning: cannot collect test class 'TestConfigC' because it has a __init__ constructor (from: test/core/config_fields/test_config_class_store.py)\n    class TestConfigC(BaseModel):\n\ntest/core/config_fields/test_config_merger.py:25\n  /Users/tianpeixie/github_workspace/cursus/test/core/config_fields/test_config_merger.py:25: PytestCollectionWarning: cannot collect test class 'TestConfig' because it has a __init__ constructor (from: test/core/config_fields/test_config_merger.py)\n    class TestConfig:\n\ntest/core/config_fields/test_type_aware_deserialization.py:60\n  /Users/tianpeixie/github_workspace/cursus/test/core/config_fields/test_type_aware_deserialization.py:60: PytestCollectionWarning: cannot collect test class 'TestBaseConfig' because it has a __init__ constructor (from: test/core/config_fields/test_type_aware_deserialization.py)\n    class TestBaseConfig(BasePipelineConfig):\n\ntest/core/config_fields/test_type_aware_deserialization.py:87\n  /Users/tianpeixie/github_workspace/cursus/test/core/config_fields/test_type_aware_deserialization.py:87: PytestCollectionWarning: cannot collect test class 'TestProcessingConfig' because it has a __init__ constructor (from: test/core/config_fields/test_type_aware_deserialization.py)\n    class TestProcessingConfig(TestBaseConfig):\n\ntest/core/config_fields/test_type_aware_deserialization.py:114\n  /Users/tianpeixie/github_workspace/cursus/test/core/config_fields/test_type_aware_deserialization.py:114: PytestCollectionWarning: cannot collect test class 'TestTrainingConfig' because it has a __init__ constructor (from: test/core/config_fields/test_type_aware_deserialization.py)\n    class TestTrainingConfig(TestBaseConfig):\n\ntest/core/config_fields/test_type_aware_serialization.py:26\n  /Users/tianpeixie/github_workspace/cursus/test/core/config_fields/test_type_aware_serialization.py:26: PytestCollectionWarning: cannot collect test class 'TestEnum' because it has a __init__ constructor (from: test/core/config_fields/test_type_aware_serialization.py)\n    class TestEnum(Enum):\n\ntest/core/config_fields/test_type_aware_serialization.py:34\n  /Users/tianpeixie/github_workspace/cursus/test/core/config_fields/test_type_aware_serialization.py:34: PytestCollectionWarning: cannot collect test class 'TestConfig' because it has a __init__ constructor (from: test/core/config_fields/test_type_aware_serialization.py)\n    class TestConfig(BaseModel):\n\ntest/core/config_fields/test_config_field_categorizer.py::TestConfigFieldCategorizer::test_categorize_field\ntest/core/config_fields/test_config_field_categorizer.py::TestConfigFieldCategorizer::test_categorize_field\n  /Users/tianpeixie/github_workspace/cursus/.venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\ntest/core/config_fields/test_integration.py: 5 warnings\ntest/core/config_fields/test_type_aware_deserialization.py: 9 warnings\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/config_fields/config_merger.py:173: PydanticDeprecatedSince211: Accessing the 'model_computed_fields' attribute on the instance is deprecated. Instead, you should access this attribute from the model class. Deprecated in Pydantic V2.11 to be removed in V3.0.\n    if not field.startswith('_') and not callable(getattr(config, field))\n\ntest/core/config_fields/test_integration.py: 5 warnings\ntest/core/config_fields/test_type_aware_deserialization.py: 9 warnings\n  /Users/tianpeixie/github_workspace/cursus/src/cursus/core/config_fields/config_merger.py:173: PydanticDeprecatedSince211: Accessing the 'model_fields' attribute on the instance is deprecated. Instead, you should access this attribute from the model class. Deprecated in Pydantic V2.11 to be removed in V3.0.\n    if not field.startswith('_') and not callable(getattr(config, field))\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n",
      "error_output": ""
    },
    {
      "module": "deps",
      "passed": 89,
      "failed": 0,
      "skipped": 0,
      "errors": 0,
      "duration": 2.094621181488037,
      "exit_code": 0,
      "output": "........................................................................ [ 80%]\n.................                                                        [100%]\n=============================== warnings summary ===============================\n.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323\n.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323\n  /Users/tianpeixie/github_workspace/cursus/.venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n",
      "error_output": ""
    }
  ]
}