"""
Configuration file for the Sphinx documentation builder.

This file contains the configuration for generating comprehensive documentation
for the Cursus project, including automatic API reference generation from
docstrings and integration with the existing slipbox knowledge base.
"""

import os
import sys
from pathlib import Path

# -- Path setup --------------------------------------------------------------

# Add the source directory to the Python path so Sphinx can import the modules
sys.path.insert(0, os.path.abspath('../src'))

# Import the package to get version information
try:
    import cursus
    version = cursus.__version__
    release = version
except ImportError:
    version = 'unknown'
    release = 'unknown'

# -- Project information -----------------------------------------------------

project = 'Cursus'
copyright = '2025, Tianpei Xie'
author = 'Tianpei Xie'

# The short X.Y version
version = version
# The full version, including alpha/beta/rc tags
release = release

# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    # Core Sphinx extensions
    'sphinx.ext.autodoc',        # Auto-generate from docstrings
    'sphinx.ext.napoleon',       # Google/NumPy docstring support
    'sphinx.ext.viewcode',       # Source code links
    'sphinx.ext.intersphinx',    # External documentation links
    'sphinx.ext.autosummary',    # Generate summary tables
    'sphinx.ext.doctest',        # Test code examples
    'sphinx.ext.todo',           # TODO support
    'sphinx.ext.coverage',       # Documentation coverage
    'sphinx.ext.ifconfig',       # Conditional content
    'sphinx.ext.githubpages',    # GitHub Pages support
    
    # Third-party extensions
    'myst_parser',               # Markdown support
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The suffix(es) of source filenames.
source_suffix = {
    '.rst': None,
    '.md': 'myst_parser',
}

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx.
language = 'en'

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
html_theme_options = {
    'canonical_url': '',
    'analytics_id': '',
    'logo_only': False,
    'display_version': True,
    'prev_next_buttons_location': 'bottom',
    'style_external_links': False,
    'vcs_pageview_mode': '',
    'style_nav_header_background': '#2980B9',
    # Toc options
    'collapse_navigation': True,
    'sticky_navigation': True,
    'navigation_depth': 4,
    'includehidden': True,
    'titles_only': False
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
html_sidebars = {
    '**': [
        'relations.html',  # needs 'show_related': True theme option to display
        'searchbox.html',
    ]
}

# -- Options for autodoc extension ------------------------------------------

# Autodoc configuration for automatic API documentation generation
autodoc_default_options = {
    'members': True,
    'member-order': 'bysource',
    'special-members': '__init__',
    'undoc-members': True,
    'exclude-members': '__weakref__',
    'show-inheritance': True,
}

# Include type hints in the documentation
autodoc_typehints = 'description'
autodoc_typehints_description_target = 'documented'

# Mock imports for dependencies that might not be available during doc build
autodoc_mock_imports = [
    'boto3',
    'botocore', 
    'sagemaker',
    'torch',
    'pytorch_lightning',
    'transformers',
    'xgboost',
    'sklearn',
    'pandas',
    'numpy',
    'matplotlib',
    'seaborn',
    'plotly',
    'networkx',
]

# -- Options for napoleon extension -----------------------------------------

# Napoleon settings for Google and NumPy style docstrings
napoleon_google_docstring = True
napoleon_numpy_docstring = True
napoleon_include_init_with_doc = False
napoleon_include_private_with_doc = False
napoleon_include_special_with_doc = True
napoleon_use_admonition_for_examples = False
napoleon_use_admonition_for_notes = False
napoleon_use_admonition_for_references = False
napoleon_use_ivar = False
napoleon_use_param = True
napoleon_use_rtype = True
napoleon_preprocess_types = False
napoleon_type_aliases = None
napoleon_attr_annotations = True

# -- Options for autosummary extension --------------------------------------

# Auto-generate API documentation
autosummary_generate = True
autosummary_imported_members = True

# -- Options for intersphinx extension --------------------------------------

# Links to external documentation
intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
    'boto3': ('https://boto3.amazonaws.com/v1/documentation/api/latest/', None),
    'sagemaker': ('https://sagemaker.readthedocs.io/en/stable/', None),
    'pandas': ('https://pandas.pydata.org/docs/', None),
    'numpy': ('https://numpy.org/doc/stable/', None),
    'sklearn': ('https://scikit-learn.org/stable/', None),
    'torch': ('https://pytorch.org/docs/stable/', None),
    'networkx': ('https://networkx.org/documentation/stable/', None),
}

# -- Options for todo extension ---------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# -- Options for doctest extension ------------------------------------------

# Doctest configuration
doctest_global_setup = '''
import cursus
from cursus import PipelineDAG, compile_dag_to_pipeline
'''

# -- Options for coverage extension -----------------------------------------

# Coverage configuration
coverage_show_missing_items = True

# -- MyST Parser configuration ----------------------------------------------

# MyST parser options for Markdown support
myst_enable_extensions = [
    "deflist",
    "tasklist", 
    "colon_fence",
    "linkify",
    "substitution",
]

# -- Custom configuration ---------------------------------------------------

# Add custom CSS
def setup(app):
    """Custom setup function for additional configuration."""
    app.add_css_file('custom.css')

# Suppress warnings for missing references to slipbox documentation
suppress_warnings = ['ref.doc']

# -- API Documentation Configuration ----------------------------------------

# Modules to document automatically
api_modules = [
    'cursus',
    'cursus.api',
    'cursus.api.dag',
    'cursus.core',
    'cursus.core.base',
    'cursus.core.compiler',
    'cursus.core.assembler',
    'cursus.core.config_fields',
    'cursus.cli',
    'cursus.steps',
    'cursus.steps.builders',
    'cursus.steps.configs',
    'cursus.steps.contracts',
    'cursus.processing',
    'cursus.registry',
    'cursus.registry.hybrid',
    'cursus.validation',
    'cursus.validation.alignment',
    'cursus.validation.builders',
    'cursus.pipeline_catalog',
    'cursus.workspace',
    'cursus.mods',
]

# -- Build configuration ----------------------------------------------------

# Files to copy to the build directory
html_extra_path = []

# Custom roles and directives
rst_prolog = """
.. |project| replace:: Cursus
.. |author| replace:: Tianpei Xie
"""

# -- GitHub integration -----------------------------------------------------

# GitHub repository information
html_context = {
    "display_github": True,
    "github_user": "TianpeiLuke",
    "github_repo": "cursus",
    "github_version": "main",
    "conf_py_path": "/docs/",
}

# -- Search configuration ---------------------------------------------------

# HTML search options
html_search_language = 'en'
html_search_options = {'type': 'default'}

# -- LaTeX output configuration ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    'papersize': 'letterpaper',
    
    # The font size ('10pt', '11pt' or '12pt').
    'pointsize': '10pt',
    
    # Additional stuff for the LaTeX preamble.
    'preamble': '',
    
    # Latex figure (float) alignment
    'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'cursus.tex', 'Cursus Documentation',
     'Tianpei Xie', 'manual'),
]

# -- Manual page output configuration ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'cursus', 'Cursus Documentation',
     [author], 1)
]

# -- Texinfo output configuration -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'cursus', 'Cursus Documentation',
     author, 'cursus', 'Automatic SageMaker Pipeline Generation',
     'Miscellaneous'),
]

# -- Epub output configuration ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = copyright

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']
